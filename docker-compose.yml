version: "3.8"

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: remotelyx_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - remotelyx_network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: remotelyx_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - remotelyx_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: remotelyx_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URL=mongodb://admin:password123@mongodb:27017/remotelyx_dashboard?authSource=admin
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
      - MONGODB_DB=remotelyx_dashboard
      - SECRET_KEY=your-super-secret-key-change-in-production
      - BACKEND_CORS_ORIGINS=["http://localhost:3000","http://localhost:8501","http://localhost:5678"]
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}

    volumes:
      - ./server:/app
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - remotelyx_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (Streamlit Dashboard)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: remotelyx_frontend
    restart: unless-stopped
    ports:
      - "8501:8501"
    environment:
      - BACKEND_URL=http://backend:8000
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_ENABLE_CORS=false
    volumes:
      - ./client:/app
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - remotelyx_network

  # n8n Workflow Automation (Using MongoDB for data storage)
  n8n:
    image: n8nio/n8n:latest
    container_name: remotelyx_n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    extra_hosts:
      - "backend:172.18.0.5"
    environment:
      # Use SQLite for n8n internal data (lightweight)
      - DB_TYPE=sqlite
      - DB_SQLITE_DATABASE=/home/node/.n8n/database.sqlite
      # Authentication
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=hadihaidar1723@gmail.com
      - N8N_BASIC_AUTH_PASSWORD=Treble23!
      # Server configuration
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - WEBHOOK_URL=https://0a81ddc18342.ngrok-free.app/
      - N8N_EDITOR_BASE_URL=https://0a81ddc18342.ngrok-free.app/
      - GENERIC_TIMEZONE=UTC
      - N8N_SECURE_COOKIE=false
      # MongoDB access for workflows (shared with main app)
      - MONGODB_CONNECTION_URL=mongodb://admin:password123@mongodb:27017/remotelyx_dashboard?authSource=admin
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_USER=admin
      - MONGODB_PASSWORD=password123
      - MONGODB_DATABASE=remotelyx_dashboard
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      mongodb:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - remotelyx_network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:5678/healthz",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  mongodb_data:
  redis_data:
  n8n_data:

networks:
  remotelyx_network:
    driver: bridge
